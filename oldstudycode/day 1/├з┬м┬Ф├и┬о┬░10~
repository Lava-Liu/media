字符串常量：
char *p = “helloworld”；
p 保存的是 helloworld 的首地址
printf("%s\n",p);



usinged long long int a =
 #define ULLI unsinged long long int 

typedef unsinged long long int ULLI;

注意区别：typedef 要加分号；相当于一个语句以 ； 结尾
2.宏定义是在预处理阶段替换
typedef去的别名实在编译的时候做类型检查
3.当申明多个变量的时候：
比如
#define PCHAR char*
typedef char* CHAR_P;


PCHAR a, b, c;//char *a; char b ; char c
CHAR_P a,b,c //char *a ; char *b ; char *c 
今晚测试~这种定义方式；


#define 和 const 的区别 
1、#define 预处理 const 编译的时候处理
2、宏定义没有类型 不做类型检查  /  const 常量在编译的时候要做类型检查
3、宏定义中的错误调试不到


作用域：
文件作用域：（在文本文件中的任何地方都可以使用）
      全局的变量或函数

函数作用域：（只能在函数体内部使用）
          函数定义的形参（形式参数），
          函数内部的局部变量
代码块作用域：
              大括号{..}中申明的变量
              不能在{}外面使用
原型作用域：
             函数只有原型的声明没有定义的时候的形参
             具有原型作用域的属性



链接属性： 在程序不同的文件代码阶段一起链接阶段，所有的标示符（特别是不同文件中相同的标示符）的处理方式
   无链接属性（none）：
     函数体内的局部变量 无（任何）链接属性


外部链接属性：（extern）

extern int sum(int, int);
int a;
     1/全局的标示副默认都具有外部链接属性
（可以在其它文件中使用）

2. 比如：如果在本文件重要使用其他地方声明或定义的变量 int a = 10；
  在本文件中需要做如下申声明：
  extern int a；
（表示该变量a实在其他地方定义过，本文件只要拿过来使用即可）
  内部链接属性： 
     在默认具有外部链接属性的标识符（变量或函数）
    前面 加上 static 关键字
    则该标识符 只能在本文件使用
    



变量的存储属性：

栈区（stack：）
   自动变量或局部变量（自动变量）
堆区（heap）：程序员进行动态内存分配获得内存空间（malloc/calloc/realloc）
全局数据区/静态变量区：
 全局变量 和 静态变量
文本区：放的是编译好的二进制指令

register： 寄存器变量


全局变量或静态变量：
1. 翻在全局数据区
2.如果没有显示的初始化，自动初始化 为 0
3.生命周期：
 程序装入内存开始到程序结束

而：局部变量出了该变量的作用域就会被释放
 堆中通过动态内存分配空间需要程序员手动是否释放（free）

变量的作用域与该变量的存储属性没有必然关系







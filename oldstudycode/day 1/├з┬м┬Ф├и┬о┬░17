函数的递归调用
1.求n的阶乘

int factorial（int n）
{ int i;
  int nul=1
  for(i=1;i<=n;i++)
{
	nul *=i;
}
	return nul;
}

int factorial(int n)
{
	if(n==1)return 1;
	return n*factorial(n-1);
}
int rubbit(int n)
{
	if(n==




快速排序：
2 4 3 8 7 19 6


2 4 3 6 7 19 8
}



找基准点 pivot
把第一个元素 基准点 最后一个元素 按顺序排好
把基准点跟最后一个元素交换
1--》 《--j
a[i] > pivot
a[j] < pivot
交换a[j] a[i]
交换a[i]he a[end]
可变参数列表：
int average (int n_value,...)	vi



结构体：

struct book
{
	char bk_name[20];
	char bk_number[20];
	double price;
	int number;
};


2 struct student
{
	int 
}



八月六号：
提出问题：
一维数组和二维数组关于数组名和指针调用的问题：
一维数组中 a 为数组的首地址 &a 为整个数组的地址：
二维数组中 *b 为某行的地址 使用*强制转换 后 使用 +i 对每行进行访问
汉诺塔问题

快速排序



